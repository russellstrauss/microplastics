* {
  max-width: 100%;
  box-sizing: border-box; }

body {
  margin: 0;
  padding: 0;
  font-family: 'Open Sans', sans-serif;
  font-size: 16px;
  padding-bottom: 100px; }

h1 {
  margin-top: 100px;
  font-size: 3rem; }

h2 {
  font-size: 2.5rem; }

h3 {
  font-size: 1.75rem; }

h1, h2, h3, h4, h5, h6 {
  font-family: 'Cormorant', serif;
  margin-bottom: 20px; }

hr {
  width: 75%;
  border: 0;
  color: black;
  background-color: black;
  height: 2px;
  margin: 100px auto; }

p {
  font-size: .8rem;
  line-height: 2.25; }

ol {
  font-size: .8rem;
  line-height: 1.75; }

ul {
  font-size: .8rem;
  line-height: 1.75; }
  ul li {
    list-style-type: square; }

.container {
  display: block;
  margin: auto; }
  .container.reading {
    max-width: 750px; }
  @media (max-width: 767px) {
    .container {
      padding-left: 15px;
      padding-right: 15px; } }
  @media (min-width: 768px) and (max-width: 991px) {
    .container {
      width: 750px; } }
  @media (min-width: 992px) {
    .container {
      width: 970px; } }
  @media (min-width: 1200px) {
    .container {
      width: 1170px; } }

.reference {
  margin-left: -1.5em;
  counter-reset: list; }
  .reference li {
    list-style: none;
    position: relative;
    padding-left: 1em; }
    .reference li:before {
      counter-increment: list;
      content: "[" counter(list) "] ";
      position: absolute;
      left: -1.4em; }

.large-graphic {
  width: 100%;
  max-width: 1600px;
  padding: 0 15px; }
  .large-graphic .horizontal-bar {
    margin: 75px 0; }

.horizontal-bar {
  width: 100%;
  border: 1px solid black;
  margin: 100px 0 0 0; }
  .horizontal-bar .title {
    font-family: 'Cormorant', serif;
    font-size: 28px;
    font-weight: 600; }
  .horizontal-bar .x-axis-label, .horizontal-bar .y-axis-label {
    font-family: 'Cormorant', serif;
    font-size: 14px;
    font-weight: 600; }

.map {
  margin-top: 100px; }
  .map svg {
    border: 1px solid black; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIl92YXJzLnNjc3MiLCJfZWxlbWVudHMuc2NzcyIsIl9yZXNwb25zaXZlLnNjc3MiLCJfZ2xvYmFsLnNjc3MiLCJjb21wb25lbnRzL19ob3Jpem9udGFsLWJhci5zY3NzIiwiY29tcG9uZW50cy9fbWFwcy5zY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3ZhcnMnO1xyXG5AaW1wb3J0ICdlbGVtZW50cyc7XHJcbkBpbXBvcnQgJ3Jlc3BvbnNpdmUnO1xyXG5AaW1wb3J0ICdnbG9iYWwnO1xyXG5cclxuQGltcG9ydCAnY29tcG9uZW50cy9ob3Jpem9udGFsLWJhcic7XHJcbkBpbXBvcnQgJ2NvbXBvbmVudHMvbWFwcyc7IiwiIiwiLy8gU3R5bGluZyBmb3IgYmFyZSBlbGVtZW50c1xyXG5cclxuKiB7XHJcblx0bWF4LXdpZHRoOiAxMDAlO1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbmJvZHkge1xyXG5cdG1hcmdpbjogMDtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcclxuXHRmb250LXNpemU6IDE2cHg7XHJcblx0cGFkZGluZy1ib3R0b206IDEwMHB4O1xyXG59XHJcblxyXG5oMSB7XHJcblx0bWFyZ2luLXRvcDogMTAwcHg7XHJcblx0Zm9udC1zaXplOiAzcmVtO1xyXG59XHJcblxyXG5oMiB7XHJcblx0Zm9udC1zaXplOiAyLjVyZW07XHJcbn1cclxuXHJcbmgzIHtcclxuXHRmb250LXNpemU6IDEuNzVyZW07XHJcbn1cclxuXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xyXG5cdGZvbnQtZmFtaWx5OiAnQ29ybW9yYW50Jywgc2VyaWY7XHJcblx0bWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuaHIge1xyXG5cdHdpZHRoOiA3NSU7XHJcblx0Ym9yZGVyOiAwO1xyXG5cdGNvbG9yOiBibGFjaztcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuXHRoZWlnaHQ6IDJweDtcclxuXHRtYXJnaW46IDEwMHB4IGF1dG87XHJcbn1cclxuXHJcbnAge1xyXG5cdGZvbnQtc2l6ZTogLjhyZW07XHJcblx0bGluZS1oZWlnaHQ6IDIuMjU7XHJcbn1cclxuXHJcbm9sIHtcclxuXHRmb250LXNpemU6IC44cmVtO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjc1O1xyXG59XHJcblxyXG51bCB7XHJcblx0Zm9udC1zaXplOiAuOHJlbTtcclxuXHRsaW5lLWhlaWdodDogMS43NTtcclxuXHRcclxuXHRsaSB7XHJcblx0XHRsaXN0LXN0eWxlLXR5cGU6IHNxdWFyZTtcclxuXHR9XHJcbn0iLCIvLyBHbG9iYWwgcmUtdXNlYWJsZSBtaXhpbiBibG9ja3NcclxuXHJcbiRtb2JpbGUtd2lkdGg6IDc2N3B4O1xyXG4kdGFibGV0LXdpZHRoOiA3NjhweDtcclxuJGRlc2t0b3Atd2lkdGg6IDk5MnB4O1xyXG4kZGVza3RvcC1sYXJnZS13aWR0aDogMTIwMHB4O1xyXG5cclxuQG1peGluIG1vYmlsZS1vbmx5IHtcclxuXHRAbWVkaWEgKG1heC13aWR0aDogI3skbW9iaWxlLXdpZHRofSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gdGFibGV0IHtcclxuXHRAbWVkaWEgKG1pbi13aWR0aDogI3skdGFibGV0LXdpZHRofSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gdGFibGV0LW9ubHkge1xyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAjeyR0YWJsZXQtd2lkdGh9KSBhbmQgKG1heC13aWR0aDogI3skZGVza3RvcC13aWR0aCAtIDFweH0pIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIGRlc2t0b3Age1xyXG5cdEBtZWRpYSAobWluLXdpZHRoOiAjeyRkZXNrdG9wLXdpZHRofSkge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5AbWl4aW4gZGVza3RvcC1sYXJnZSB7XHJcblx0QG1lZGlhIChtaW4td2lkdGg6ICN7JGRlc2t0b3AtbGFyZ2Utd2lkdGh9KSB7XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbi5jb250YWluZXIge1xyXG5cdGRpc3BsYXk6IGJsb2NrO1xyXG5cdG1hcmdpbjogYXV0bztcclxuXHRcclxuXHQmLnJlYWRpbmcge1xyXG5cdFx0bWF4LXdpZHRoOiA3NTBweDtcclxuXHR9XHJcblx0XHJcblx0QGluY2x1ZGUgbW9iaWxlLW9ubHkge1xyXG5cdFx0cGFkZGluZy1sZWZ0OiAxNXB4O1xyXG5cdFx0cGFkZGluZy1yaWdodDogMTVweDtcclxuXHR9XHJcblx0XHJcblx0QGluY2x1ZGUgdGFibGV0LW9ubHkge1xyXG5cdFx0d2lkdGg6IDc1MHB4O1xyXG5cdH1cclxuXHRcclxuXHRAaW5jbHVkZSBkZXNrdG9wIHtcclxuXHRcdHdpZHRoOiA5NzBweDtcclxuXHR9XHJcblx0XHJcblx0QGluY2x1ZGUgZGVza3RvcC1sYXJnZSB7XHJcblx0XHR3aWR0aDogMTE3MHB4O1xyXG5cdH1cclxufSIsIi5yZWZlcmVuY2Uge1xyXG5cdG1hcmdpbi1sZWZ0OiAtMS41ZW07XHJcblx0Y291bnRlci1yZXNldDogbGlzdDtcclxuXHRcclxuXHRsaSB7XHJcblx0XHRsaXN0LXN0eWxlOiBub25lO1xyXG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0cGFkZGluZy1sZWZ0OiAxZW07XHJcblx0XHRcclxuXHRcdCY6YmVmb3JlIHtcclxuXHRcdFx0Y291bnRlci1pbmNyZW1lbnQ6IGxpc3Q7XHJcblx0XHRcdGNvbnRlbnQ6IFwiW1wiIGNvdW50ZXIobGlzdCkgXCJdIFwiO1xyXG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHRcdGxlZnQ6IC0xLjRlbTtcclxuXHRcdH1cclxuXHR9XHJcbn0iLCIubGFyZ2UtZ3JhcGhpYyB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0bWF4LXdpZHRoOiAxNjAwcHg7XHJcblx0cGFkZGluZzogMCAxNXB4O1xyXG5cdFxyXG5cdC5ob3Jpem9udGFsLWJhciB7XHJcblx0XHRtYXJnaW46IDc1cHggMDtcclxuXHR9XHJcbn1cclxuXHJcbi5ob3Jpem9udGFsLWJhciB7XHJcblx0d2lkdGg6IDEwMCU7XHJcblx0Ym9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcblx0bWFyZ2luOiAxMDBweCAwIDAgMDtcclxuXHRcclxuXHQudGl0bGUge1xyXG5cdFx0Zm9udC1mYW1pbHk6ICdDb3Jtb3JhbnQnLCBzZXJpZjtcclxuXHRcdGZvbnQtc2l6ZTogMjhweDtcclxuXHRcdGZvbnQtd2VpZ2h0OiA2MDA7XHJcblx0fVxyXG5cdFxyXG5cdC54LWF4aXMtbGFiZWwsIC55LWF4aXMtbGFiZWwge1xyXG5cdFx0Zm9udC1mYW1pbHk6ICdDb3Jtb3JhbnQnLCBzZXJpZjtcclxuXHRcdGZvbnQtc2l6ZTogMTRweDtcclxuXHRcdGZvbnQtd2VpZ2h0OiA2MDA7XHJcblx0fVxyXG5cdFxyXG5cdC50aWNrIHtcclxuXHRcdFxyXG5cdFx0dGV4dCB7XHJcblx0XHRcdC8vdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01cHgpOyAvLyBnaXZlIHktYXhpcyBsYWJsZXMgbW9yZSBzcGFjZVxyXG5cdFx0fVxyXG5cdH1cclxufSIsIi5tYXAge1xyXG5cdG1hcmdpbi10b3A6IDEwMHB4O1xyXG5cdHN2ZyB7XHJcblx0XHRib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuXHR9XHJcbn0iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFFRUEsQUFBQSxDQUFDLENBQUM7RUFDRCxTQUFTLEVBQUUsSUFBSTtFQUNmLFVBQVUsRUFBRSxVQUFVLEdBQ3RCOztBQUVELEFBQUEsSUFBSSxDQUFDO0VBQ0osTUFBTSxFQUFFLENBQUM7RUFDVCxPQUFPLEVBQUUsQ0FBQztFQUNWLFdBQVcsRUFBRSx1QkFBdUI7RUFDcEMsU0FBUyxFQUFFLElBQUk7RUFDZixjQUFj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 */
